@page
@model SafeStreet.Pages.CrimeMapModel
@{
    ViewData["Title"] = "Crime Map View";
}

<main>
    <header>
        <h1 class="text-center mb-2" style="color: black; font-family: 'Poppins', sans-serif; font-weight: bold; margin-top: 20px">Crime Map</h1>
        <p class ="text-center mb-2">
        The safety scores below are ranked from highest to lowest, with higher scores indicating safer neighborhoods.</p>
        <p class ="text-center mb-2">These scores are calculated based on a combination of recent police reports and user-submitted safety ratings.</p>
    </header>

    <!-- Map Section -->
    <section id="map-section" aria-labelledby="mapSectionTitle">
        <div id="map-container">
            <div id="map" tabindex="0" aria-label="Interactive map showing neighborhoods and safety scores"></div>
        </div>
    </section>

    <!-- Neighborhoods Grid -->
    <!-- Selected Neighborhood Display -->
   
    <h2 id="selected-neighborhood" style="text-align: center; margin: 20px 0;">Select a Neighborhood</h2>
    <div class="crime-map-grid">
        @{
            var neighborhoods = (Dictionary<string, (double Lat, double Lng, double SafetyScore)>)ViewData["NeighborhoodSafetyScores"];
        }
        @foreach (var neighborhood in neighborhoods.OrderByDescending(kvp => kvp.Value.SafetyScore))
        {
            var safetyScore = neighborhood.Value.SafetyScore;
            var className = safetyScore switch
            {
                >= 80 => "very-low-crime",
                >= 60 => "low-crime",
                >= 40 => "medium-crime",
                _ => "high-crime"
            };
            <div class="grid-item @className" onclick="showOnMap('@neighborhood.Key', @neighborhood.Value.Lat, @neighborhood.Value.Lng)">
                <span>@neighborhood.Key</span>
                <br />
                <span>Safety Score: @safetyScore.ToString("F1")</span> <!-- Format score to 1 decimal place -->
            </div>
        }
    </div>

    @section Scripts {
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBvQ1QHv3HHDe5b6JGYQvWgGjepIWw20Pg&libraries=places&callback=initMap" async defer></script>
        
    <script>
        let map;
        function initMap() {
            const initialLocation = { lat: 39.1031, lng: -84.5120 }; // Default to Cincinnati
            map = new google.maps.Map(document.getElementById("map"), {
                center: initialLocation,
                zoom: 12,
            });
        }
        let currentMarker; // To keep track of the current marker
        function showOnMap(name, lat, lng) {
            // Update the selected neighborhood name
            const neighborhoodNameElement = document.getElementById('selected-neighborhood');
            neighborhoodNameElement.textContent = name;
            
            if (!isNaN(lat) && !isNaN(lng)) {
                const mapCenter = { lat, lng };
                // Update the map center and zoom
                map.setCenter(mapCenter);
                map.setZoom(14);
                // Remove the old marker if it exists
                if (currentMarker) {
                    currentMarker.setMap(null); // Removes the marker from the map
                }
                // Add a marker
                currentMarker = new google.maps.Marker({
                                    position: mapCenter,
                                    map: map,
                                    title: name,
                });
            }
        }
    </script>
}


    <!-- Action Buttons -->
    <div class="action-buttons text-center mt-5">
        <a asp-page="/UserRatings/Create" class="btn btn-dark-blue btn-lg" aria-label="Submit a safety rating">
            <i class="fas fa-edit" aria-hidden="true"></i> Submit a Safety Rating
        </a>
        <a asp-page="/Index" class="btn btn-dark-blue btn-lg" aria-label="Search neighborhoods on the map">
            <i class="fas fa-map-marked-alt" aria-hidden="true"></i> Search on Map
        </a>
    </div>
</main>



<style>
    .crime-map-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 10px;
        margin-top: 20px;
    }

    .grid-item {
        padding: 20px;
        border-radius: 8px;
        color: white;
        font-weight: bold;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        cursor: pointer;
    }

    .high-crime {
        background-color: #d32f2f;
    }

    .medium-crime {
        background-color: #e57373;
    }

    .low-crime {
        background-color: #ef9a9a;
    }

    .very-low-crime {
        background-color: #ffcdd2;
    }
</style>
